basePath: /api/v1
definitions:
  api.CreateTokenPayload:
    properties:
      email:
        example: demo@quiz.com
        maxLength: 256
        type: string
      password:
        example: password
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  api.Response:
    properties:
      data: {}
      error:
        type: string
    type: object
  api.SubmitQuizAnswersPayload:
    properties:
      answers:
        items:
          properties:
            answer_index:
              type: integer
            question_id:
              type: integer
          required:
          - answer_index
          - question_id
          type: object
        type: array
    required:
    - answers
    type: object
  api.TokenCreatedResponse:
    properties:
      expires_in:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
    type: object
  store.Question:
    properties:
      answers:
        items:
          type: string
        type: array
      correct_answer_index:
        type: integer
      id:
        type: integer
      quiz_id:
        type: integer
      value:
        type: string
    type: object
  store.Quiz:
    properties:
      description:
        type: string
      id:
        type: integer
      questions:
        items:
          $ref: '#/definitions/store.Question'
        type: array
      title:
        type: string
    type: object
  store.Result:
    properties:
      id:
        type: integer
      question_count:
        type: integer
      quiz_id:
        type: integer
      user_id:
        type: integer
      user_percentile:
        type: integer
      user_score:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: dtslubbersen@gmail.com
    name: Declan Lubbersen
    url: https://github.com/dtslubbersen/go-quiz
  description: This is the API documentation for go-quiz, a simple Quiz API allowing
    users to obtain quizzes, answer the questions and see their results compared to
    other users.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: go-quiz
  version: "1.0"
paths:
  /auth/token:
    post:
      consumes:
      - application/json
      description: Creates a JWT token for a user after validating their credentials
      parameters:
      - description: User credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.CreateTokenPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.TokenCreatedResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
      summary: Generates an authentication token
      tags:
      - auth
  /quizzes:
    get:
      consumes:
      - application/json
      description: Fetches a list of all quizzes from the in memory store
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/store.Quiz'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Retrieves all quizzes
      tags:
      - quizzes
  /quizzes/{quizId}:
    get:
      consumes:
      - application/json
      description: Fetches a specific quiz using its ID from the in-memory store
      parameters:
      - description: Quiz ID
        in: path
        name: quizId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/store.Quiz'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Retrieves a quiz by ID
      tags:
      - quizzes
  /quizzes/{quizId}/results:
    get:
      consumes:
      - application/json
      description: Fetches the result of a quiz attempt by the current user.
      parameters:
      - description: Quiz ID
        in: path
        name: quizId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/store.Result'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Retrieves quiz results for a user
      tags:
      - quizzes
  /quizzes/{quizId}/submit:
    post:
      consumes:
      - application/json
      description: Allows a user to submit answers for a given quiz
      parameters:
      - description: Quiz ID
        in: path
        name: quizId
        required: true
        type: integer
      - description: User's answers
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.SubmitQuizAnswersPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Submits answers for a quiz
      tags:
      - quizzes
securityDefinitions:
  BearerAuth:
    description: Use a 'Bearer {token}' to authenticate your requests
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
