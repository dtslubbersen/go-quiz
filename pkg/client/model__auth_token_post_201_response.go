/*
go-quiz

This is the API documentation for go-quiz, a simple Quiz API allowing users to obtain quizzes, answer the questions and see their results compared to other users.

API version: 1.0
Contact: dtslubbersen@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthTokenPost201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthTokenPost201Response{}

// AuthTokenPost201Response struct for AuthTokenPost201Response
type AuthTokenPost201Response struct {
	Data  *ApiTokenCreatedResponse `json:"data,omitempty"`
	Error *string                  `json:"error,omitempty"`
}

// NewAuthTokenPost201Response instantiates a new AuthTokenPost201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthTokenPost201Response() *AuthTokenPost201Response {
	this := AuthTokenPost201Response{}
	return &this
}

// NewAuthTokenPost201ResponseWithDefaults instantiates a new AuthTokenPost201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthTokenPost201ResponseWithDefaults() *AuthTokenPost201Response {
	this := AuthTokenPost201Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AuthTokenPost201Response) GetData() ApiTokenCreatedResponse {
	if o == nil || IsNil(o.Data) {
		var ret ApiTokenCreatedResponse
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthTokenPost201Response) GetDataOk() (*ApiTokenCreatedResponse, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AuthTokenPost201Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given ApiTokenCreatedResponse and assigns it to the Data field.
func (o *AuthTokenPost201Response) SetData(v ApiTokenCreatedResponse) {
	o.Data = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *AuthTokenPost201Response) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthTokenPost201Response) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *AuthTokenPost201Response) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *AuthTokenPost201Response) SetError(v string) {
	o.Error = &v
}

func (o AuthTokenPost201Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthTokenPost201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableAuthTokenPost201Response struct {
	value *AuthTokenPost201Response
	isSet bool
}

func (v NullableAuthTokenPost201Response) Get() *AuthTokenPost201Response {
	return v.value
}

func (v *NullableAuthTokenPost201Response) Set(val *AuthTokenPost201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthTokenPost201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthTokenPost201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthTokenPost201Response(val *AuthTokenPost201Response) *NullableAuthTokenPost201Response {
	return &NullableAuthTokenPost201Response{value: val, isSet: true}
}

func (v NullableAuthTokenPost201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthTokenPost201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
