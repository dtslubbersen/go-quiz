/*
go-quiz

This is the API documentation for go-quiz, a simple Quiz API allowing users to obtain quizzes, answer the questions and see their results compared to other users.

API version: 1.0
Contact: dtslubbersen@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiUserResponse{}

// ApiUserResponse struct for ApiUserResponse
type ApiUserResponse struct {
	Email *string `json:"email,omitempty"`
	Id    *int32  `json:"id,omitempty"`
}

// NewApiUserResponse instantiates a new ApiUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiUserResponse() *ApiUserResponse {
	this := ApiUserResponse{}
	return &this
}

// NewApiUserResponseWithDefaults instantiates a new ApiUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiUserResponseWithDefaults() *ApiUserResponse {
	this := ApiUserResponse{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApiUserResponse) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserResponse) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApiUserResponse) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApiUserResponse) SetEmail(v string) {
	o.Email = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiUserResponse) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserResponse) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiUserResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ApiUserResponse) SetId(v int32) {
	o.Id = &v
}

func (o ApiUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableApiUserResponse struct {
	value *ApiUserResponse
	isSet bool
}

func (v NullableApiUserResponse) Get() *ApiUserResponse {
	return v.value
}

func (v *NullableApiUserResponse) Set(val *ApiUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiUserResponse(val *ApiUserResponse) *NullableApiUserResponse {
	return &NullableApiUserResponse{value: val, isSet: true}
}

func (v NullableApiUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
