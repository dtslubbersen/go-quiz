/*
go-quiz

This is the API documentation for go-quiz, a simple Quiz API allowing users to obtain quizzes, answer the questions and see their results compared to other users.

API version: 1.0
Contact: dtslubbersen@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiSubmitQuizAnswersPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiSubmitQuizAnswersPayload{}

// ApiSubmitQuizAnswersPayload struct for ApiSubmitQuizAnswersPayload
type ApiSubmitQuizAnswersPayload struct {
	Answers []ApiSubmitQuizAnswersPayloadAnswersInner `json:"answers"`
}

type _ApiSubmitQuizAnswersPayload ApiSubmitQuizAnswersPayload

// NewApiSubmitQuizAnswersPayload instantiates a new ApiSubmitQuizAnswersPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSubmitQuizAnswersPayload(answers []ApiSubmitQuizAnswersPayloadAnswersInner) *ApiSubmitQuizAnswersPayload {
	this := ApiSubmitQuizAnswersPayload{}
	this.Answers = answers
	return &this
}

// NewApiSubmitQuizAnswersPayloadWithDefaults instantiates a new ApiSubmitQuizAnswersPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSubmitQuizAnswersPayloadWithDefaults() *ApiSubmitQuizAnswersPayload {
	this := ApiSubmitQuizAnswersPayload{}
	return &this
}

// GetAnswers returns the Answers field value
func (o *ApiSubmitQuizAnswersPayload) GetAnswers() []ApiSubmitQuizAnswersPayloadAnswersInner {
	if o == nil {
		var ret []ApiSubmitQuizAnswersPayloadAnswersInner
		return ret
	}

	return o.Answers
}

// GetAnswersOk returns a tuple with the Answers field value
// and a boolean to check if the value has been set.
func (o *ApiSubmitQuizAnswersPayload) GetAnswersOk() ([]ApiSubmitQuizAnswersPayloadAnswersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Answers, true
}

// SetAnswers sets field value
func (o *ApiSubmitQuizAnswersPayload) SetAnswers(v []ApiSubmitQuizAnswersPayloadAnswersInner) {
	o.Answers = v
}

func (o ApiSubmitQuizAnswersPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiSubmitQuizAnswersPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["answers"] = o.Answers
	return toSerialize, nil
}

func (o *ApiSubmitQuizAnswersPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"answers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiSubmitQuizAnswersPayload := _ApiSubmitQuizAnswersPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiSubmitQuizAnswersPayload)

	if err != nil {
		return err
	}

	*o = ApiSubmitQuizAnswersPayload(varApiSubmitQuizAnswersPayload)

	return err
}

type NullableApiSubmitQuizAnswersPayload struct {
	value *ApiSubmitQuizAnswersPayload
	isSet bool
}

func (v NullableApiSubmitQuizAnswersPayload) Get() *ApiSubmitQuizAnswersPayload {
	return v.value
}

func (v *NullableApiSubmitQuizAnswersPayload) Set(val *ApiSubmitQuizAnswersPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSubmitQuizAnswersPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSubmitQuizAnswersPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSubmitQuizAnswersPayload(val *ApiSubmitQuizAnswersPayload) *NullableApiSubmitQuizAnswersPayload {
	return &NullableApiSubmitQuizAnswersPayload{value: val, isSet: true}
}

func (v NullableApiSubmitQuizAnswersPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSubmitQuizAnswersPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


