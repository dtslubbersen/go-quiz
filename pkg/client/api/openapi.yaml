openapi: 3.0.1
info:
  contact:
    email: dtslubbersen@gmail.com
    name: Declan Lubbersen
    url: https://github.com/dtslubbersen/go-quiz
  description: "This is the API documentation for go-quiz, a simple Quiz API allowing\
    \ users to obtain quizzes, answer the questions and see their results compared\
    \ to other users."
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: go-quiz
  version: "1.0"
servers:
- url: //localhost:8080/api/v1
paths:
  /auth/token:
    post:
      description: Creates a JWT token for a user after validating their credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.CreateTokenPayload'
        description: User credentials
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_auth_token_post_201_response'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_auth_token_post_400_response'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_auth_token_post_400_response'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_auth_token_post_400_response'
          description: Internal Server Error
      summary: Generates an authentication token
      tags:
      - auth
      x-codegen-request-body-name: payload
  /quizzes:
    get:
      description: Fetches a list of all quizzes from the in memory store
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes_get_400_response'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes_get_400_response'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Retrieves all quizzes
      tags:
      - quizzes
  /quizzes/{quizId}:
    get:
      description: Fetches a specific quiz using its ID from the in-memory store
      parameters:
      - description: Quiz ID
        in: path
        name: quizId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes__quizId__get_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes_get_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes_get_400_response'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes_get_400_response'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Retrieves a quiz by ID
      tags:
      - quizzes
  /quizzes/{quizId}/results:
    get:
      description: Fetches the result of a quiz attempt by the current user.
      parameters:
      - description: Quiz ID
        in: path
        name: quizId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes__quizId__results_get_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes_get_400_response'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes_get_400_response'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes_get_400_response'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Retrieves quiz results for a user
      tags:
      - quizzes
  /quizzes/{quizId}/submit:
    post:
      description: Allows a user to submit answers for a given quiz
      parameters:
      - description: Quiz ID
        in: path
        name: quizId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_quizzes__quizId__submit_post_request'
        description: User's answers
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes__quizId__submit_post_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes_get_400_response'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_quizzes_get_400_response'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Submits answers for a quiz
      tags:
      - quizzes
      x-codegen-request-body-name: payload
components:
  schemas:
    api.CreateTokenPayload:
      properties:
        email:
          example: demo@quiz.com
          maxLength: 256
          type: string
        password:
          example: password
          maxLength: 64
          minLength: 8
          type: string
      required:
      - email
      - password
      type: object
    api.QuestionAnswerPayload:
      properties:
        answer_index:
          type: integer
        question_id:
          type: integer
      required:
      - answer_index
      - question_id
      type: object
    api.Response:
      properties:
        data:
          type: object
        error:
          type: string
        status_code:
          type: integer
      type: object
    api.SubmitQuizAnswersPayload:
      properties:
        answers:
          items:
            $ref: '#/components/schemas/api.QuestionAnswerPayload'
          type: array
      required:
      - answers
      type: object
    api.TokenCreatedResponse:
      example:
        expires_in: 6
        user:
          id: 1
          email: email
        token: token
      properties:
        expires_in:
          type: integer
        token:
          type: string
        user:
          $ref: '#/components/schemas/api.UserResponse'
      type: object
    api.UserResponse:
      example:
        id: 1
        email: email
      properties:
        email:
          type: string
        id:
          type: integer
      type: object
    store.Performance:
      example:
        correct_answers_count:
          key: 1
        users_taken_count: 5
      properties:
        correct_answers_count:
          additionalProperties:
            type: integer
          type: object
        users_taken_count:
          type: integer
      type: object
    store.Question:
      example:
        quiz_id: 7
        answers:
        - answers
        - answers
        correct_answer_index: 5
        id: 2
        value: value
      properties:
        answers:
          items:
            type: string
          type: array
        correct_answer_index:
          type: integer
        id:
          type: integer
        quiz_id:
          type: integer
        value:
          type: string
      type: object
    store.Quiz:
      example:
        performance:
          correct_answers_count:
            key: 1
          users_taken_count: 5
        questions:
        - quiz_id: 7
          answers:
          - answers
          - answers
          correct_answer_index: 5
          id: 2
          value: value
        - quiz_id: 7
          answers:
          - answers
          - answers
          correct_answer_index: 5
          id: 2
          value: value
        description: description
        id: 6
        title: title
      properties:
        description:
          type: string
        id:
          type: integer
        performance:
          $ref: '#/components/schemas/store.Performance'
        questions:
          items:
            $ref: '#/components/schemas/store.Question'
          type: array
        title:
          type: string
      type: object
    store.Result:
      example:
        correct_answers_count: 6
        question_count: 5
        quiz_id: 5
        top_percentile: 2.3021358869347655
        user_id: 7
        id: 1
      properties:
        correct_answers_count:
          type: integer
        id:
          type: integer
        question_count:
          type: integer
        quiz_id:
          type: integer
        top_percentile:
          type: number
        user_id:
          type: integer
      type: object
    _auth_token_post_201_response:
      allOf:
      - $ref: '#/components/schemas/api.Response'
      - properties:
          data:
            $ref: '#/components/schemas/api.TokenCreatedResponse'
        type: object
      example:
        status_code: 0
        data:
          expires_in: 6
          user:
            id: 1
            email: email
          token: token
        error: error
    _auth_token_post_400_response:
      allOf:
      - $ref: '#/components/schemas/api.Response'
      - properties:
          error:
            type: string
        type: object
      example:
        status_code: 5
        data: "{}"
        error: error
    _quizzes_get_200_response:
      allOf:
      - $ref: '#/components/schemas/api.Response'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/store.Quiz'
            type: array
          status_code:
            type: integer
        type: object
      example:
        status_code: 9
        data:
        - performance:
            correct_answers_count:
              key: 1
            users_taken_count: 5
          questions:
          - quiz_id: 7
            answers:
            - answers
            - answers
            correct_answer_index: 5
            id: 2
            value: value
          - quiz_id: 7
            answers:
            - answers
            - answers
            correct_answer_index: 5
            id: 2
            value: value
          description: description
          id: 6
          title: title
        - performance:
            correct_answers_count:
              key: 1
            users_taken_count: 5
          questions:
          - quiz_id: 7
            answers:
            - answers
            - answers
            correct_answer_index: 5
            id: 2
            value: value
          - quiz_id: 7
            answers:
            - answers
            - answers
            correct_answer_index: 5
            id: 2
            value: value
          description: description
          id: 6
          title: title
        error: error
    _quizzes_get_400_response:
      allOf:
      - $ref: '#/components/schemas/api.Response'
      - properties:
          error:
            type: string
          status_code:
            type: integer
        type: object
      example:
        status_code: 2
        data: "{}"
        error: error
    _quizzes__quizId__get_200_response:
      allOf:
      - $ref: '#/components/schemas/api.Response'
      - properties:
          data:
            $ref: '#/components/schemas/store.Quiz'
          status_code:
            type: integer
        type: object
      example:
        status_code: 6
        data:
          performance:
            correct_answers_count:
              key: 1
            users_taken_count: 5
          questions:
          - quiz_id: 7
            answers:
            - answers
            - answers
            correct_answer_index: 5
            id: 2
            value: value
          - quiz_id: 7
            answers:
            - answers
            - answers
            correct_answer_index: 5
            id: 2
            value: value
          description: description
          id: 6
          title: title
        error: error
    _quizzes__quizId__results_get_200_response:
      allOf:
      - $ref: '#/components/schemas/api.Response'
      - properties:
          data:
            $ref: '#/components/schemas/store.Result'
          status_code:
            type: integer
        type: object
      example:
        status_code: 9
        data:
          correct_answers_count: 6
          question_count: 5
          quiz_id: 5
          top_percentile: 2.3021358869347655
          user_id: 7
          id: 1
        error: error
    _quizzes__quizId__submit_post_request:
      allOf:
      - $ref: '#/components/schemas/api.SubmitQuizAnswersPayload'
      - properties:
          answers:
            items:
              $ref: '#/components/schemas/api.QuestionAnswerPayload'
            type: array
        type: object
    _quizzes__quizId__submit_post_200_response:
      allOf:
      - $ref: '#/components/schemas/api.Response'
      - properties:
          status_code:
            type: integer
        type: object
      example:
        status_code: 6
        data: "{}"
        error: error
  securitySchemes:
    BearerAuth:
      description: "Use a 'Bearer {token}' to authenticate your requests"
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
